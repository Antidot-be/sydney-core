<?php
/**
 * File generated by the Sydney_Admin_Generator
 */

/**
 * @package Admindb
 * @subpackage ModelGenerated
 */
class FilfoldersUsersOp extends Sydney_Db_Table
{

    public function getTags($usersId)
    {
        $user = new Users();
        $tag = new Filfolders();

        $selector = $this->select(Zend_Db_Table::SELECT_WITHOUT_FROM_PART)
            ->setIntegrityCheck(false)
            ->from(
                array('u' => $user->getTableName(true)), // Name
                '' // Cols - default * - empty equal to "No From Part"
            )
            ->join(
                array('fu' => $this->getTableName(true)), // Name
                'u.id = fu.users_id' // Condition
                , '' // Cols - default * - empty equal to "No From Part"
            )
            ->join(
                array('ff' => $tag->getTableName(true)), // Name
                'fu.filfolders_id = ff.id', // Condition
                array('label', 'parent_id', 'id')
            )
            ->where('u.id = ?', $usersId)
            ->where('ff.safinstances_id = ?', Sydney_Tools_Sydneyglobals::getSafinstancesId())
            ->order('ff.pagorder');

        return $this->fetchAll($selector);
    }

    public function getUsers($tagId)
    {
        $user = new Users();
        $tag = new Filfolders();

        $selector = $this->select(Zend_Db_Table::SELECT_WITHOUT_FROM_PART)
            ->setIntegrityCheck(false)
            ->from(
                array('u' => $user->getTableName(true)), // Name
                'id' // Cols - default * - empty equal to "No From Part"
            )
            ->join(
                array('fu' => $this->getTableName(true)), // Name
                'u.id = fu.users_id' // Condition
                , '' // Cols - default * - empty equal to "No From Part"
            )
            ->join(
                array('ff' => $tag->getTableName(true)), // Name
                'fu.filfolders_id = ff.id', // Condition
                ''
            )
            ->where('ff.id = ?', $tagId)
            ->order('ff.pagorder');

        return $this->fetchAll($selector);
    }

}
