<?php
/**
 * File generated by the Sydney_Admin_Generator on the Jan 19, 2010 4:19:05 PM by arnaud@antidot.ca
 */

/**
 * Default Admin interface controller for the filfolders table
 * @package Admindb
 * @subpackage ControllerGenerated
 */
class Adminfiles_FilfoldersController extends Sydney_Controller_Action
{

    public function addAction()
    {
        $this->view->titletxt = 'Filfolders Administration Add ';
        $form = new FilfoldersForm();
        $form->submit->setLabel('Add');
        $this->view->form = $form;
        if ($this->_request->isPost()) {
            $formData = $this->_request->getPost();
            if ($form->isValid($formData)) {
                $fileFolders = new Filfolders();

                $row = $fileFolders->createRow();
                $row->label = $form->getValue('label');
                $row->desc = $form->getValue('desc');
                $row->parent_id = $form->getValue('parent_id');
                $row->safinstances_id = $form->getValue('safinstances_id');
                $row->isnode = $form->getValue('isnode');
                $row->isparam = $form->getValue('isparam');
                $row->relevance = $form->getValue('relevance');
                $row->pagorder = $form->getValue('pagorder');

                $row->save();
                $id = $fileFolders->getAdapter()->lastInsertId();;
                foreach ($formData as $k => $v) {
                    if (is_array($v) && class_exists($k)) {
                        $subform = new $k;
                        $subform->setFilfoldersLinkedTo($id, $v);
                    }
                }
                $this->redirect('/adminfiles/filfolders/index');
            } else {
                $form->populate($formData);
            }
        }
        $this->render('edit');
    }

    public function editAction()
    {
        $qdata = $this->_request;
        if ($qdata->layout == 'out') {
            $this->_helper->layout->disableLayout();
        }

        $this->view->titletxt = 'Filfolders Administration Edit ';
        $form = new FilfoldersForm();
        $form->submit->setLabel('Edit Filfolders');
        $this->view->form = $form;

        if ($this->_request->isPost()) {
            $formData = $this->_request->getPost();
            if ($form->isValid($formData)) {
            } else {
                $form->populate($formData);
            }
        } else {
            $id = (int) $this->_request->getParam('id', 0);
            if ($id > 0) {
                $fileFolders = new Filfolders();
                $row = $fileFolders->fetchRow('id=' . $id);
                $topopulate = $row->toArray();
                $form->populate($topopulate);
            }
        }
    }

    /**
     *
     * @return void
     */
    public function editprocessAction()
    {
        $this->view->jsdisp = false;
        $this->view->msg = 'ERROR: Undefined error';
        $r = $this->getRequest();
        if ($r->layout == 'out') {
            $this->_helper->layout->disableLayout();
        }
        if (isset($r->id)) {
            $eDB = new Filfolders();
            $e = $eDB->find($r->id);
            if (count($e) == 1) {
                if ($r->duplicate == 1) {
                    $e2 = $eDB->createRow();
                    $e2->desc = $r->desc;
                    $e2->isnode = $r->isnode;
                    $e2->isparam = $r->isparam;
                    $e2->label = $r->label;
                    $e2->relevance = $r->relevance;
                    $e2->parent_id = $e[0]->parent_id;
                    $e2->safinstances_id = $e[0]->safinstances_id;
                    $e2->save();

                    $this->view->msg = 'Entity duplicated';
                } else {
                    $e[0]->desc = $r->desc;
                    $e[0]->isnode = $r->isnode;
                    $e[0]->isparam = $r->isparam;
                    $e[0]->label = $r->label;
                    $e[0]->relevance = $r->relevance;
                    $this->view->label = $r->label;
                    $this->view->id = $r->id;
                    if ($e[0]->save()) {
                        $this->view->jsdisp = true;
                        $this->view->msg = 'Data saved, thanks.';
                    } else {
                        $this->view->msg = 'ERROR: error while saving the data';
                    }
                }
            } else {
                $this->view->msg = 'ERROR: we could not find an entry in our DB...';
            }
        } else {
            $this->view->msg = 'ERROR: Could not save the data';
        }
    }

    /**
     *
     * @return void
     */
    public function deleteAction()
    {
        $id = (int) $this->_request->getParam('id');
        if ($id > 0) {
            $fileFolders = new Filfolders();
            $where = 'id = ' . $id;
            $fileFolders->delete($where);
        }
        $this->redirect('/adminfiles/filfolders/index');
    }
}
