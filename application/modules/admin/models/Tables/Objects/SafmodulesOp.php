<?php
/**
 * File generated by the Sydney_Admin_Generator v2.0 on the Oct 20, 2010 4:21:07 PM by arnaud@antidot.ca
 */

/**
 * Mapping of the Safmodules table in an object
 * @package Admindb
 * @subpackage ModelGenerated
 */
class SafmodulesOp extends Sydney_Db_Table
{
    /**
     * Returns the available modules
     *
     * @param string $safinstancesId
     * @param array $usersGroupsIds
     * @param boolean $availableFormat
     * @return array
     */
    public function getAvailableAvModules($safinstancesId = 0, $usersGroupsIds = array(), $availableFormat = false)
    {
        $avmodules = array();
        if (count($usersGroupsIds) > 0) {
            $wand = " AND usersgroups_id IN (" . implode(',', $usersGroupsIds) . ") ";
        } else {
            $wand = "";
        }

        $listIdsModulesAvaillable = $this->getIdsModulesAvailable($safinstancesId);
        $listIdsModulesAvaillable = (count($listIdsModulesAvaillable) == 0) ? 0 : implode(',', $listIdsModulesAvaillable);
        $where = "istechnical = 0 AND name LIKE 'admin%' " . $wand . " AND (id IN (" . $listIdsModulesAvaillable . ") OR isalwaysactive = 1)";
        $els = $this->fetchAll($where, 'order');
        if ($availableFormat) {
            foreach ($els as $e) {
                $show = ($e->showintab == 1);
                $avmodules[$e->name] = array(
                    $e->label,
                    $show,
                    $e->name,
                    $e->image,
                    'pagesEdit',
                    $e->id
                );
            }
        } else {
            $avmodules = $els->toArray();
        }

        // add custom tabs
        $registry = Zend_Registry::getInstance();
        if ($registry->isRegistered('customavmodules')) {
            foreach ($registry->get('customavmodules') as $k => $v) {
                $avmodules[$k] = $v;
            }
        }

        return $avmodules;
    }

    /**
     * Returns an array of ids of the available modules in the webinstances which ID is passed as param
     * @param int $safinstancesId
     * @param Boolean $includeAlwaysActive Include the "always active onces" ?
     * @param Boolean $tabbedOnly Get the onces which would be tabbed (in the admin tabs) only
     * @return Array
     */
    public function getIdsModulesAvailable($safinstancesId = 0, $includeAlwaysActive = true, $tabbedOnly = false)
    {
        if ($safinstancesId == 0) {
            $safinstancesId = Zend_Registry::get("config")->db->safinstances_id;
        }
        $tr = array();
        $tabwhere = '';
        if ($tabbedOnly) {
            $tabwhere = " AND showintab = '1' ";
        }
        if ($includeAlwaysActive) {
            foreach ($this->fetchAll(" isalwaysactive = 1 " . $tabwhere) as $el) {
                $tr[] = $el->id;
            }
        } elseif ($tabbedOnly) {
            foreach ($this->fetchAll("showintab = '1'") as $el) {
                $tr[] = $el->id;
            }
        }
        $sDB = new SafinstancesSafmodules();
        foreach ($sDB->fetchAll("safinstances_id = " . $this->_db->quote($safinstancesId) . " ") as $e) {
            $tr[] = $e->safmodules_id;
        }

        return $tr;
    }

    /**
     * @param int $safinstancesId
     * @param bool $flat
     * @return array
     */
    public function getAvailableModules($safinstancesId = 0, $flat = true)
    {
        $avmodules = array();
        $where = "isalwaysactive = 1 OR id IN (" . implode(',', $this->getIdsModulesAvailable($safinstancesId)) . ")";
        $els = $this->fetchAll($where);
        foreach ($els as $e) {
            if ($flat) {
                $avmodules[] = $e->name;
            } else {
                $avmodules[$e->id] = $e->toArray();
            }
        }

        return $avmodules;
    }

    /**
     * @param $moduleName
     * @return null|Zend_Db_Table_Row_Abstract
     */
    public function getId($moduleName)
    {
        $selector = $this->select()->where('name = ?', $moduleName);

        return $this->fetchRow($selector);
    }

    /**
     * Returns true if the module is available for the instance
     *
     * @param string $name Module name as defined in the DB
     * @param null $safinstancesId Safinstance ID or null we ll take the one from the registry
     * @return boolean
     */
    public function isModuleActivatedForInstance($name = '', $safinstancesId = null)
    {
        if ($safinstancesId === null) {
            $safinstancesId = Zend_Registry::get("config")->db->safinstances_id;
        }
        $moduleRow = $this->fetchRow(" name = '" . $name . "' ");
        if ($moduleRow !== null && isset($moduleRow->id)) {
            $corTbl = new SafinstancesSafmodules();
            $corRow = $corTbl->fetchRow(" safmodules_id = '" . $moduleRow->id . "' AND safinstances_id = '" . $safinstancesId . "' ");

            return ($corRow !== null && isset($corRow->id));
        } else {
            return false;
        }
    }

}
