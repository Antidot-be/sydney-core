<?php

function iniArrayToHtml($a)
{
    $h = '<table class="tableDefault">';
    foreach ($a as $t => $aa) {
        $h .= '<tr><th colspan="2">' . $t . '</th></tr>';
        foreach ($aa as $k => $v) {
            $h .= '<tr><td>' . $k . '</td><td>' . $v . '</td></tr>';
        }
    }
    $h .= '</table>';

    return $h;
}


?>
<style>
    .consolesty {
        background: #FFF;
        padding: 10px;
        border: 1px solid #555;
        font-family: "Courier New";
    }
</style>
<script>
    $(function () {
        $('.showhidebutton').toggle(function (e) {
            e.preventDefault();
            var cl = $(this).attr('href');
            $('.' + cl).show();
            $(this).css({'background': '#888'});
        }, function (e) {
            e.preventDefault();
            var cl = $(this).attr('href');
            $('.' + cl).hide();
            $(this).css({'background': '#1455AA'});
        });
        $('#safinstances').formvalidator({'url': '/adminglobal/services/editsafinstances/format/json'});
        $('#pagmenusSafinstances').formvalidator({'url': '/adminglobal/services/editpagmenussafinstances/format/json'});
        $('#safinstancesCompanies').formvalidator({'url': '/adminglobal/services/editsafinstancescompanies/format/json'});
        $('#safinstancesModules').formvalidator({'url': '/adminglobal/services/editsafinstancesmodules/format/json'});

        <?php if (isset($this->safinstanceid) && $this->safinstanceid != '') { ?>
        // Gestion de la table des meta tags
        var metas = {};
        var workingTr = null;

        $.postJSON(
            '/adminglobal/services/getmetatags',
            {
                'safinstance_id': <?php if (isset($this->safinstanceid) && $this->safinstanceid != '') {echo $this->safinstanceid;
} else {echo "''";
}  ?>,
                'format': 'json'
            },
            function (metatags) {
                metas = metatags.ResultSet;
                if (metas.hasOwnProperty('error')) {
                    $('.DefineMeta fieldset').html(
                        'An error occured: '
                            + metas['error']
                    );
                    return false;
                }
                $.each(metas, appendMeta);
            }
        );

        function appendMeta(name, content) {
            var html = getMetaLine(name, content);
            $('#metatags').append(html);
        }

        function getMetaLine(name, content) {
            var line =
                '<tr><td>'
                    + name
                    + '</td><td>'
                    + content
                    + '</td><td><a class="editmeta" href="#">Edit</a>&nbsp;'
                    + '<a class="removemeta" href="#">Remove</a></td></tr>';

            return line;
        }

        function editMeta() {
            var metaname = '', metacontent = '', replace = false;
            if (arguments.length == 2) {
                metaname = arguments[0];
                metacontent = arguments[1];
                replace = true;
            }

            var html = '';
            if (replace) {
                html += '<tr class="treditmeta">';
            } else {
                html += '<tr>';
            }

            html +=
                '<td><input type="text" name="metaname" value="'
                    + metaname
                    + '" /></td>'
                    + '<td><input type="text" name="metacontent" value="'
                    + metacontent
                    + '" /></td>'
                    + '<td><a class="savemeta" href="#">Save</a>&nbsp;'
                    + '<a class="cancelmeta" href="#">Cancel</a></td></tr>';

            if (replace) {
                workingTr.replaceWith(html);
            } else {
                $('#metatags').append(html);
            }
            $('input[name=metaname]').focus();
        }

        function saveMeta(deletemeta, tr, metaname, metacontent) {
            var metastmp = metas;
            if (deletemeta) {
                delete metastmp[metaname]
            } else {
                metastmp[metaname] = metacontent;
            }
            $.postJSON(
                '/adminglobal/services/savemetatags',
                {
                    'safinstance_id': <?php echo $this->safinstanceid; ?>,
                    'format': 'json',
                    'metatags': metastmp
                },
                function (datas) {
                    var result = datas.ResultSet;
                    if (result.hasOwnProperty('error')) {
                        alert('An error occured: ' + result['error']);
                    } else {
                        metas = metastmp;
                        if (deletemeta) {
                            tr.remove();
                        } else {
                            tr.replaceWith(getMetaLine(metaname, metacontent));
                        }
                    }
                }
            );
        }

        $('a#addmeta').click(function (evt) {
            evt.preventDefault();
            editMeta();
        });

        $('a.editmeta').live('click', function (evt) {
            evt.preventDefault();
            workingTr = $(this).parent().parent();
            var metaname = $('td', workingTr).eq(0).html();
            var metacontent = $('td', workingTr).eq(1).html();
            editMeta(metaname, metacontent);
        });

        $('a.removemeta').live('click', function (evt) {
            evt.preventDefault();
            if (confirm('Are you sure?')) {
                var tr = $(this).parent().parent();
                var metaname = $('td', tr).eq(0).html();
                if (metas.hasOwnProperty(metaname)) {
                    saveMeta(true, tr, metaname, '');
                }
            }
        });

        $('a.savemeta').live('click', function (evt) {
            evt.preventDefault();
            var tr = $(this).parent().parent();
            var metaname = $('input[name=metaname]', tr).val();
            var metacontent = $('input[name=metacontent]', tr).val();

            if (metaname.length == 0 || metacontent.length == 0) {
                alert('missing value(s)');
                return false;
            }

            if (metas.hasOwnProperty(metaname) && !tr.hasClass('treditmeta')) {
                alert('this meta tag already exist! Edit it.');
                return false;
            }
            if (workingTr != null) {
                var workingMetaname = $('td', workingTr).eq(0).html();
                if (workingMetaname != metaname) {
                    delete metas[workingMetaname];
                }
            }

            saveMeta(false, tr, metaname, metacontent);

        });

        $('a.cancelmeta').live('click', function (evt) {
            evt.preventDefault();
            var tr = $(this).parent().parent();
            if (tr.hasClass('treditmeta') && workingTr != null) {
                tr.replaceWith(workingTr);
                workingTr = null;
            } else {
                tr.remove();
            }
        });

        <?php } ?>
    });
</script>
<div class="box">
    <h2>Webinstances parameters</h2>
    <fieldset>
        <?php echo $this->safinstancesForm; ?>
    </fieldset>


    <h2>Links to other entities</h2>

    <p>Use the buttons to show/hide the data</p>
    <a href="DefineMeta" class="bigbutton showhidebutton">Define Meta Tags</a>
    <a href="Linktomenus" class="bigbutton showhidebutton">Link to menus</a>
    <a href="Linktocompanies" class="bigbutton showhidebutton">Link to
        companies</a>
    <a href="Linktomodules" class="bigbutton showhidebutton">Link to modules</a>
    <br/><br/>

    <div class="DefineMeta" style="display: none;">
        <fieldset>
            <table class="tableDefault">
                <thead>
                <tr>
                    <td style="width: 150px;">Name</td>
                    <td style="width: 250px;">Content</td>
                    <td>&nbsp;</td>
                </tr>
                </thead>
                <tbody id="metatags">
                </tbody>
                <tfoot>
                <tr>
                    <td colspan="3"><a id="addmeta" href="#">+ Add</a></td>
                </tr>
                </tfoot>
            </table>
        </fieldset>
    </div>
    <div class="Linktomenus" style="display:none;">
        <fieldset>
            <h3>Link to menus</h3>
            <?php echo $this->menusForm; ?>
        </fieldset>
    </div>
    <div class="Linktocompanies" style="display:none;">
        <fieldset>
            <h3>Link to companies</h3>
            <?php echo $this->companiesForm; ?>
        </fieldset>
    </div>
    <div class="Linktomodules" style="display:none;">
        <fieldset>
            <h3>Link to modules</h3>
            <?php echo $this->modulesForm; ?>
        </fieldset>
    </div>

    <br/>
    <br/>
    <hr style="display:block;"/>


    <h2>Config files </h2>

    <p>Use the buttons to show/hide the data</p>
    <a href="Configfiledefault" class="bigbutton showhidebutton">Config file
        default</a>
    <a href="Configfilesite" class="bigbutton showhidebutton">Config file
        site</a>
    <a href="Apacheconfig" class="bigbutton showhidebutton">Apache config</a>
    <br/><br/><br/>

    <div class="Configfiledefault" style="display:none;">
        <h3>Config file default</h3>
        <?php echo iniArrayToHtml($this->configdefault); ?>
        <br/>
        <hr style="display:block;"/>
    </div>
    <div class="Configfilesite" style="display:none;">
        <h3>Config file site</h3>
        <?php if (isset($this->configsite) && is_array($this->configsite)) { ?>
            <?php echo iniArrayToHtml($this->configsite); ?>
        <?php } else { ?>
            <div>The site config file does not exist</div>
        <?php } ?>
        <br/>
        <hr style="display:block;"/>
    </div>
    <div class="Apacheconfig" style="display:none;">
        <h3>Apache config</h3>
        <?php if (isset($this->configapache) && $this->configapache) { ?>
            <xmp class="consolesty">
                <?php echo $this->configapache; ?>
            </xmp>
        <?php } else { ?>
            <div>The apache config file does not exist</div>
        <?php } ?>
        <br/>
        <hr style="display:block;"/>
    </div>

</div>

